name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  test:
    name: Test
    timeout-minutes: 4
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: default_db
          POSTGRES_USER: default_user
          POSTGRES_PASSWORD: default_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      server:
        image: opvious/api-server
        env:
          DB_URL: postgres://default_user:default_pass@postgres/default_db
          OPVIOUS_API_IMAGE_EULA: accepted
          REDIS_URL: redis://redis
          STATIC_TOKENS: test@opvious.io=testing
        ports:
          - 8080:8080
    outputs:
      tagged: ${{ format(steps.check-version.outputs.exists == 'false') }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Lint
        run: pnpm run lint
      - name: Test
        run: pnpm t
        env:
          OPVIOUS_ENDPOINT: http://localhost:8080
          OPVIOUS_TOKEN: static:testing
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: out/coverage
      - name: Extract version
        id: extract-version
        run: |
          PACKAGE_VERSION="$(node -p 'require("./package.json").version')"
          echo "::set-output name=version::$PACKAGE_VERSION"
      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.1.0
        id: check-version
        with:
          tag: v${{ steps.extract-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tag
        if: steps.check-version.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: v
          github_repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.extract-version.outputs.version }}
  publish-docs:
    name: Publish documentation
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Build docs
        run: pnpm run docs
      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs
  publish-npm:
    name: Publish packages to NPM
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.outputs.tagged == 'true'
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: Publish
        run: pnpm -r exec pnpm publish --tag alpha
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
