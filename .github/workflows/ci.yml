name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  test:
    name: Test and tag
    timeout-minutes: 4
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new-version: ${{ steps.bump-version.outputs.new_version }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: default_db
          POSTGRES_USER: default_user
          POSTGRES_PASSWORD: default_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      server:
        image: opvious/api-server
        env:
          DB_URL: postgres://default_user:default_pass@postgres/default_db
          NODE_ENV: test
          OPVIOUS_API_IMAGE_EULA: accepted
          REDIS_URL: redis://redis
          STATIC_TOKENS: test@opvious.io=testing
        ports:
          - 8080:8080
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Lint
        run: pnpm run lint
      - name: Test
        run: pnpm t
        env:
          OPVIOUS_ENDPOINT: http://localhost:8080
          OPVIOUS_TOKEN: static:testing
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: out/coverage
      - name: Bump version and create tag
        id: bump-version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          custom_release_rules: build:patch
  publish-docs:
    name: Publish documentation
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Build docs
        run: pnpm run docs
      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs
  publish-npm:
    name: Publish packages to NPM
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.outputs.new-version != ''
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Set up Node (GPR)
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install and publish
        run: pnpm i --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Set up Node (NPM)
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: Publish
        run: |
          pnpm -r exec pnpm version ${{ needs.test.outputs.new-version }}
          pnpm -r exec pnpm publish --no-git-checks --tag alpha
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
