name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  test:
    name: Test
    timeout-minutes: 2
    runs-on: ubuntu-latest
    outputs:
      tagged: ${{ format(steps.check-version.outputs.exists == 'false') }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: Install
        run: pnpm i
      - name: Lint
        run: pnpm run lint
      - name: Test
        run: pnpm t
        env:
          OPVIOUS_AUTHORIZATION: ${{ secrets.OPVIOUS_AUTHORIZATION }}
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: out/coverage
      - name: Extract version
        id: extract-version
        run: |
          PACKAGE_VERSION="$(node -p 'require("./package.json").version')"
          echo "::set-output name=version::$PACKAGE_VERSION"
      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.1.0
        id: check-version
        with:
          tag: v${{ steps.extract-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tag
        if: steps.check-version.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: v
          github_repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.extract-version.outputs.version }}
  publish-docs:
    name: Publish documentation
    timeout-minutes: 3
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: Install
        run: pnpm i
      - name: Build docs
        run: pnpm run docs
      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs
  publish-npm:
    name: Publish packages to NPM
    timeout-minutes: 2
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.outputs.tagged == 'true'
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: Install
        run: pnpm i
      - name: Publish
        run: pnpm -r exec pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
