name: PR
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  test:
    name: Test
    timeout-minutes: 4
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: default_db
          POSTGRES_USER: default_user
          POSTGRES_PASSWORD: default_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      server:
        image: opvious/api-server
        env:
          DB_URL: postgres://default_user:default_pass@postgres/default_db
          LL: info,@opvious/attempt-server=debug
          OPVIOUS_API_IMAGE_EULA: accepted
          REDIS_URL: redis://redis
          STATIC_TOKENS: test@opvious.io=testing
        ports:
          - 8080:8080
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Lint
        run: pnpm run lint
      - name: Test
        run: pnpm t
        env:
          OPVIOUS_ENDPOINT: http://localhost:8080
          OPVIOUS_TOKEN: static:testing
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: out/coverage
